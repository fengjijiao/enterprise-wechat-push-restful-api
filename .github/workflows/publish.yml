name: publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        go_version:
          - 1.15.5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v1
        with:
           go-version: '1.15.5' # The Go version to download (if necessary) and use.
      - run: chmod +x compiler.sh && ./compiler.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get Name of Artifact
        env: 
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          ARTIFACT_PATHNAME=$(ls bin/* | head -n 1)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
          echo ::set-env name=ARTIFACT_NAME::${ARTIFACT_NAME}
          echo ::set-env name=ARTIFACT_PATHNAME::${ARTIFACT_PATHNAME}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.ARTIFACT_PATHNAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/zip
